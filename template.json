{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "S3 VirusScan",
  "Parameters": {
    "AutoScalingDesiredCapacityParameter": {
      "Description": "Desired Capacity for Auto Scaling",
      "Type": "Number",
      "Default": "1"
    },
    "AutoScalingMinSizeParameter": {
      "Description": "Min Size for Auto Scaling",
      "Type": "Number",
      "Default": "1"
    },
    "AutoScalingMaxSizeParameter": {
      "Description": "Max Size for Auto Scaling",
      "Type": "Number",
      "Default": "1"
    },
    "VPCParameter": {
      "Description": "VPC",
      "Type": "AWS::EC2::VPC::Id"
    },
    "SubnetsParameter": {
      "Description": "A list of subnets",
      "Type": "List<AWS::EC2::Subnet::Id>"
    },
    "InstanceTypeParameter": {
      "Description": "Specifies the instance type of the EC2 instance",
      "Type": "String",
      "Default": "t2.micro"
    },
    "KeyNameParameter": {
      "Description": "Provides the name of the EC2 key pair",
      "Type": "AWS::EC2::KeyPair::KeyName"
    }
  },
  "Mappings": {
    "RegionMap": {
      "eu-west-1": {"AMI": "ami-31328842"},
      "ap-southeast-1": {"AMI": "ami-e90dc68a"},
      "ap-southeast-2": {"AMI": "ami-f2210191"},
      "eu-central-1": {"AMI": "ami-e2df388d"},
      "ap-northeast-2": {"AMI": "ami-6598510b"},
      "ap-northeast-1": {"AMI": "ami-f80e0596"},
      "us-east-1": {"AMI": "ami-08111162"},
      "sa-east-1": {"AMI": "ami-1e159872"},
      "us-west-1": {"AMI": "ami-1b0f7d7b"},
      "us-west-2": {"AMI": "ami-c229c0a2"}
    }
  },
  "Resources": {
    "ScanQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
      }
    },
    "ScanQueuePolicy": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "AWS":"*"  
            },
            "Action": [
              "SQS:SendMessage"
            ],
            "Resource": {"Fn::GetAtt": ["ScanQueue", "Arn"]}
          }]
        },
        "Queues": [{"Ref": "ScanQueue"}]
      }
    },
    "ScanAutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "DesiredCapacity": {"Ref": "AutoScalingDesiredCapacityParameter"},
        "LaunchConfigurationName": {"Ref": "ScanLaunchConfiguration"},
        "MaxSize": {"Ref": "AutoScalingMaxSizeParameter"},
        "MinSize": {"Ref": "AutoScalingMinSizeParameter"},
        "VPCZoneIdentifier": {"Ref": "SubnetsParameter"}
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Timeout": "PT10M"
        }
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "PauseTime": "PT10M",
          "SuspendProcesses": ["AlarmNotification"],
          "WaitOnResourceSignals": "true"
        }
      }
    },
    "ScanInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [{"Ref": "ScanIAMRole"}]
      }
    },
    "ScanIAMRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": ["ec2.amazonaws.com"]
            },
            "Action": ["sts:AssumeRole"]
          }]
        },
        "Path": "/",
        "Policies": [{
          "PolicyName": "s3",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                "s3:GetObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                "*"
              ]
            }]
          }
        }, {
          "PolicyName": "sqs",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage"
              ],
              "Resource": [
                {"Fn::GetAtt": ["ScanQueue", "Arn"]}
              ]
            }]
          }
        }]
      }
    },
    "ScanLaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Metadata": {
        "Comment": "Install application",
        "AWS::CloudFormation::Init": {
          "config": {
            "packages": {
              "yum": {
                "clamd": [],
                "clamav": [],
                "clamav-update": []
              },
              "rubygems": {
                "aws-sdk": [],
                "daemons": []
              }
            },
            "sources": {
              "/opt/aws-s3-virusscan": "https://github.com/widdix/aws-s3-virusscan/archive/master.zip"
            },
            "files": {
              "/opt/aws-s3-virusscan/s3-virusscan.conf": {
                "content": {"Fn::Join": ["", [
                  "region: ", {"Ref": "AWS::Region"}, "\n",
                  "queue: ", {"Ref": "ScanQueue"}, "\n"
                ]]},
                "mode": "000644",
                "owner": "root",
                "group": "root"
              },
              "/etc/cfn/cfn-hup.conf": {
                "content": {"Fn::Join": ["", [
                  "[main]", "\n",
                  "stack=", {"Ref": "AWS::StackId"}, "\n",
                  "region=", {"Ref": "AWS::Region"}, "\n"
                ]]},
                "mode": "000400",
                "owner": "root",
                "group": "root"
              },
              "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                "content": {"Fn::Join": ["", [
                  "[cfn-auto-reloader-hook]", "\n",
                  "triggers=post.update", "\n",
                  "path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init", "\n",
                  "action=/opt/aws/bin/cfn-init -v ",
                  "         --stack ", {"Ref": "AWS::StackName"},
                  "         --resource ScanLaunchConfiguration ",
                  "         --region ", {"Ref": "AWS::Region"}, "\n",
                  "runas=root", "\n"
                ]]}
              }
            },
            "commands": {
              "enable_freshclam_cron": {
                "command": "sed -i 's/FRESHCLAM_DELAY/#FRESHCLAM_DELAY/g' /etc/sysconfig/freshclam",
              },
              "enable_freshclam": {
                "command": "sed -i 's/Example/#Example/g' /etc/freshclam.conf"
              },
              "symlink": {
                "command": "ln -s /opt/aws-s3-virusscan/s3-virusscan /etc/init.d/s3-virusscan"
              }
            },
            "services": {
              "sysvinit": {
                "cfn-hup": {"enabled": "true", "ensureRunning": "true", "files": ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"]},
                "s3-virusscan": {"enabled": "true", "ensureRunning": "true", "files": ["/etc/init.d/s3-virusscan", "/opt/aws-s3-virusscan/daemon.rb", "/opt/aws-s3-virusscan/worker.rb"]}
              }
            }
          }
        }
      },
      "Properties": {
        "KeyName": {"Ref": "KeyNameParameter"},
        "AssociatePublicIpAddress": true,
        "EbsOptimized": false,
        "IamInstanceProfile": {"Ref": "ScanInstanceProfile"},
        "ImageId": {"Fn::FindInMap": ["RegionMap", {"Ref": "AWS::Region"}, "AMI"]},
        "InstanceType": {"Ref": "InstanceTypeParameter"},
        "SecurityGroups": [{"Ref": "ScanSecurityGroup"}],
        "UserData": { "Fn::Base64": { "Fn::Join": ["", [
          "#!/bin/bash -x", "\n",
          "/opt/aws/bin/cfn-init --verbose --stack=", {"Ref": "AWS::StackName"}, "--region=", {"Ref": "AWS::Region"}, " --resource=ScanLaunchConfiguration", "\n",
          "/opt/aws/bin/cfn-signal --exit-code=$? --stack=", {"Ref": "AWS::StackName"}, " --region=", {"Ref": "AWS::Region"}, " --resource=ScanAutoScalingGroup", "\n"
        ]]}}
      }
    },
    "ScanSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "S3 VirusScan",
        "SecurityGroupEgress": [{
          "IpProtocol": "-1",
          "CidrIp": "0.0.0.0/0"
        }],
        "SecurityGroupIngress": [{
          "CidrIp": "0.0.0.0/0",
          "FromPort": 22,
          "IpProtocol": "tcp",
          "ToPort": 22
        }],
        "VpcId": {"Ref": "VPCParameter"}
      }
    }
  }
}
